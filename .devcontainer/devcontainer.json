// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.187.0/containers/javascript-node-postgres
// Update the VARIANT arg in docker-compose.yml to pick a Node.js version: 10, 12, 14 
{
	"name": "Node.js & PostgreSQL (Community)",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspace",

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"sqltools.connections": [{
			"name": "Container database",
			"driver": "MySQL",
			"previewLimit": 50,
			"server": "localhost",
			"port": 3306,
			"database": "lux",
			"username": "mysql",
			"password": "mysql",
			"askForPassword": false
		}]
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"dbaeumer.vscode-eslint",
		"cweijan.vscode-mysql-client2",
		"hashicorp.terraform"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [3000, 3306],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "cd api && yarn install && cd ../client && yarn install && cd .. && gcloud auth activate-service-account --key-file ./credentials.json && gcloud config set project tecnoly && gcloud container clusters get-credentials tecnoly-us-central1-0 -z us-central1-c && kubectl config set-context --current --namespace=lux",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "node"
}
